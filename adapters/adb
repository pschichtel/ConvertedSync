#!/usr/bin/env bash

echo_err()
{
    (>&2 echo "$@")
}

ADB_BIN="${ADB_BIN:-"$(which adb)"}"
ADB_SELECT_DEVICE="${ADB_SELECT_DEVICE:-""}"

selection=""
if [[ ! -z "$ADB_SELECT_DEVICE" ]]
then
    device_id="$(adb devices -l | grep -P '\sdevice\s' | grep -i "$ADB_SELECT_DEVICE" | grep -oP '^\S+')"
    if [[ -z "$device_id" ]]
    then
        echo_err "Unable to find device '${ADB_SELECT_DEVICE}' !"
        exit 255
    fi
    selection="-s $device_id"
fi

esc()
{
    printf '%q' "$1"
}

adb_run()
{
    "$ADB_BIN" ${selection} "$@"
    return $?
}

adb_shell()
{
    adb_run shell "$@"
    return $?
}

adb_push()
{
    adb_run push "$@" > /dev/null
    return $?
}

list_files()
{
    local path="${1?no base path given!}"
    adb_shell find "$(esc "$path")" -type f -exec stat -c '%Y,%n' '"{}"' '\;'
    return $?
}

rm_file()
{
    local path="${1?no file path given!}"
    adb_shell rm "$(esc "$path")"
    return $?
}

copy_file()
{
    local from="${1?no local path given!}"
    local to="${2?no remote path given!}"
    adb_push "$from" "$to"
    local result=$?
    if [[ "$result" -ne 0 ]]
    then
        echo_err "Failed to push '${from}' to '${to}'!"
        return "$result"
    fi
    return 0
}

move_file()
{
    local from="${1?no local path given!}"
    local to="${2?no remote path given!}"
    copy_file "$from" "$to"
    local result=$?
    if [[ "$result" -ne 0 ]]
    then
        return "$result"
    fi
    rm "$from"
    return $?
}

rename_file()
{
    local from="${1?no source path given!}"
    local to="${2?no target path given!}"
    adb_shell mv "$(esc "$from")" "$(esc "$to")"
    return $?
}

file_exists()
{
    local path="${1?no file path given!}"
    adb_shell stat "$(esc "$path")" > /dev/null
    return $?
}

mkdirs()
{
    local path="${1?no file path given!}"
    adb_shell mkdir -p "$(esc "$path")" > /dev/null
    return $?
}

free_space()
{
    local path="${1?no file path given!}"
    local out="$(adb_shell df -k "$(esc "$path")")"
    local result=$?
    if [[ "$result" -ne 0 ]]
    then
        echo_err "Unable to read free space"
        return "$result"
    fi
    local cells=($(grep '/' <<< "$out"))
    echo "${cells[3]},${cells[1]}"
    return $?
}

purge_empty()
{
    local path="${1?no file path given!}"
    adb_shell find "$(esc "$path")" -type d -depth -exec rmdir '"{}"' '\;' 2> /dev/null
    return 0
}

command="$1"
shift 1
case "$command" in
    list)
        list_files "$@"
        exit $?
        ;;
    rm)
        rm_file "$@"
        exit $?
        ;;
    copy)
        copy_file "$@"
        exit $?
        ;;
    move)
        move_file "$@"
        exit $?
        ;;
    rename)
        rename_file "$@"
        exit $?
        ;;
    exists)
        file_exists "$@"
        exit $?
        ;;
    mkdirs)
        mkdirs "$@"
        exit $?
        ;;
    freespace)
        free_space "$@"
        exit $?
        ;;
    purge-empty)
        purge_empty "$@"
        exit $?
        ;;
    *)
        if [[ -z "$command" ]]
        then
            echo_err "No command given!"
        else
            echo_err "Invalid command '${command}'!"
        fi
        echo_err "Use one of: list, rm or move."
        exit 255
esac
