#!/usr/bin/env bash

ADB_BIN="${ADB_BIN:-"$(which adb)"}"
ADB_SELECT_DEVICE="${ADB_SELECT_DEVICE:-""}"

selection=""
if [[ ! -z "$ADB_SELECT_DEVICE" ]]
then
    selection="-s $(adb devices -l | grep -P '\sdevice\s' | grep "$ADB_SELECT_DEVICE" | grep -oP '^\S+')"
fi

adb_run()
{
    "$ADB_BIN" $selection "$@"
    return $?
}

adb_shell()
{
    adb_run shell "$@"
    return $?
}

adb_push()
{
    adb_run push "$@"
    return $?
}

list_files()
{
    local path="${1?no base path given!}"
    adb_shell "TZ=UTC find '$path' -type f -exec ls -ao {} \;"
    return $?
}

rm_file()
{
    local path="${1?no file path given!}"
    adb_shell "rm -v '$path'"
    return $?
}

copy_file()
{
    local from="${1?no local path given!}"
    local to="${2?no remote path given!}"
    adb_push "$from" "$to"
    result=$?
    if [[ $result -ne 0 ]]
    then
        echo_err "Failed to push '${from}' to '${to}'!"
        return $result
    fi
    return 0
}

move_file()
{
    local from="${1?no local path given!}"
    local to="${2?no remote path given!}"
    copy_file "$from" "$to"
    result=$?
    if [[ $result -ne 0 ]]
    then
        return $result
    fi
    rm -v "$from"
    return $?
}

rename_file()
{
    local from="${1?no source path given!}"
    local to="${2?no target path given!}"
    adb_shell "mv '${from}' '${to}'"
    return $?
}

file_exists()
{
    local path="${1?no file path given!}"
    adb_shell "stat '$path'"
    return $?
}

echo_err()
{
    (>&2 echo "$@")
}

command="$1"
shift 1
case "$command" in
    list)
        list_files "$@"
        exit $?
        ;;
    rm)
        rm_file "$@"
        exit $?
        ;;
    copy)
        copy_file "$@"
        exit $?
        ;;
    move)
        move_file "$@"
        exit $?
        ;;
    rename)
        rename_file "$@"
        exit $?
        ;;
    exists)
        file_exists "$@"
        exit $?
        ;;
    line-pattern)
        echo '^(?:\S+\s+){4}(\S+\s+\S+)\s(.+)$'
        exit 0
        ;;
    *)
        if [[ -z "$command" ]]
        then
            echo_err "No command given!"
        else
            echo_err "Invalid command '${command}'!"
        fi
        echo_err "Use one of: list, rm or move."
        exit 255
esac
